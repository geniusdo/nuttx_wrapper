#color definition
string(ASCII 27 esc)
set(RED          "${esc}[31m")
set(GREEN        "${esc}[32m")
set(YELLOW       "${esc}[33m")
set(BLUE         "${esc}[34m")
set(MAGENTA      "${esc}[35m")
set(CYAN         "${esc}[36m")
set(WHITE        "${esc}[37m")
set(BOLD_RED     "${esc}[1;31m")
set(BOLD_GREEN   "${esc}[1;32m")
set(BOLD_YELLOW  "${esc}[1;33m")
set(BOLD_BLUE    "${esc}[1;34m")
set(BOLD_MAGENTA "${esc}[1;35m")
set(BOLD_CYAN    "${esc}[1;36m")
set(BOLD_WHITE   "${esc}[1;37m")
set(BOLD_COLOR   "${esc}[1m")  
set(END  "${esc}[m")  

include(CMakeParseArguments)
function(parse_function_args)
  cmake_parse_arguments(IN "" "NAME" "OPTIONS;ONE_VALUE;MULTI_VALUE;REQUIRED;ARGN" "${ARGN}")
  cmake_parse_arguments(OUT "${IN_OPTIONS}" "${IN_ONE_VALUE}" "${IN_MULTI_VALUE}" "${IN_ARGN}")
  # unparsed args
  if(OUT_UNPARSED_ARGUMENTS)
    message(FATAL_ERROR "${IN_NAME}: unparsed ${OUT_UNPARSED_ARGUMENTS}")
  endif()
  # required args
  foreach(arg ${IN_REQUIRED})
    if(NOT OUT_${arg})
      if(NOT "${OUT_${arg}}" STREQUAL "0")
        message(FATAL_ERROR "${IN_NAME} requires argument ${arg}\nARGN: ${IN_ARGN}")
      endif()
    endif()
  endforeach()
  # return all args
  foreach(arg ${IN_OPTIONS} ${IN_ONE_VALUE} ${IN_MULTI_VALUE})
    set(${arg} ${OUT_${arg}} PARENT_SCOPE)
  endforeach()
endfunction()


function(list_make_absolute var prefix)
  set(list_var "")
  foreach(f ${ARGN})
    if(IS_ABSOLUTE ${f})
      list(APPEND list_var "${f}")
    else()
      list(APPEND list_var "${prefix}/${f}")
    endif()
  endforeach()
  set(${var} "${list_var}" PARENT_SCOPE)
endfunction()
